<script>
var socket = io.connect('http://detect.herokuapp.com');
//var socket = io.connect('http://localhost:3000');

socket.on('connect',function(data){
		if(!connected){
			connected = 1;
			socket.emit('joinRoom',{
				room: '{{this.room}}',
				nickname: '{{this.nickname}}'
			});

			setName("#myNickname",'{{this.nickname}}');
		}
		socket.on('startGame',function(data){
			console.log('opponent is ready: ' + data.nickname);
			setName("#opponentNickname",data.nickname);
			startCountdown();
		});
		

		socket.on('opponentLocation',function(data){
			setOpponent(data.bodyX,data.bodyY,data.frontX,data.frontY);
			addProjectiles(data.ids, data.projectiles);
		});

		socket.on('opponentHit',function(data){
			//console.log('the oppoent got hit by : ' + data.projectileId);
			removeProjectile(data.projectileId);
			incrementScore("#myScore");
		});
});

function ready(){
	$("#start").toggle();
	socket.emit('ready',{
		room: '{{this.room}}'
	});
	startGame();
}

function sendHit(id){
	console.log('got hit');
	socket.emit('hit',{
		room: '{{this.room}}',
		projectileId: id
	});
}

function sendPosition(){
	var tempProj = [];
	var tempId = [];
	var index;
	var proj = getProjectiles();
	var i = getIds();
	/*
			positionX: me.frontX,
			positionY: me.frontY,
			endPositionX: me.frontX + x,
			endPositionY: me.frontY + y,
			deltaX: x,
			deltaY: y
	*/
	for(index = 0;index < proj.length;index++){
		var current = proj[index];
		var start = reflectPoint(current.positionX,current.positionY);
		var end = reflectPoint(current.endPositionX,current.endPositionY);
		var newItem = {
			positionX: start.x,
			positionY: start.y,
			endPositionX: end.x,
			endPositionY: end.y,
			deltaX: -1 * current.deltaX,
			deltaY: -1 * current.deltaY

		}
		tempProj.push(newItem);
	}
	for(index = 0;index < i.length;index++){
		tempId.push(i[index] * -1);
	}
	var reflectBody = reflectPoint(getBodyX(),getBodyY());
	var reflectFront = reflectPoint(getFrontX(),getFrontY());
	socket.emit('myLocation',{
		bodyX: reflectBody.x,
		bodyY: reflectBody.y,
		frontX: reflectFront.x,
		frontY: reflectFront.y,
		projectiles: tempProj,
		ids: tempId,
		room: '{{this.room}}'
	});
}
</script>

<div class="row-fluid">
  <div class="span4 offset4 text-center">
  	<h1>Detect</h1>
    <button id="start" class="btn btn-primary" onClick="ready();">Start</button>
	<br><br>

	<div id="wrapperPlayers">
		<div class="player">
			<div id="myNickname" class="playerName">
				{{nickname}}
			</div>
			<div id="myScore" class="playerScore">
				0
			</div>
		</div>
		<div class="player">
			<div id="opponentNickname" class="playerName">
				Player Two
			</div>
			<div id="opponentScore" class="playerScore">
				0
			</div>
		</div>
	</div>
	<br>
	<div id="game"></div>
  </div>
</div>

